{"version":3,"sources":["Components/section/Section.js","Components/controls/FeedbackOptions.js","Components/statistics/Statistics.js","Components/notification/Notification.js","Components/feedback/Feedback.js","Components/App.js","index.js","Components/controls/FeedbackOptions.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","className","map","option","style","btn","type","name","onClick","toUpperCase","Statistcs","good","neutral","bad","total","rate","Notification","messege","Feedback","state","evt","statName","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","defaultProps","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"0PAgBeA,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gBCeQC,EAnBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACE,qBAAKC,UAAU,aAAf,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBAAQF,UAAWG,IAAMC,IAAkBC,KAAK,SAASC,KAAMJ,EAAQK,QAASR,EAAhF,SACGG,EAAOM,eADyBN,WCe9BO,EApBG,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC9C,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,yDAA4BC,EAA5B,WCMSC,G,MAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,4BAAIA,QCDJC,E,4MAOJC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPb,gBAAkB,SAAAoB,GAChB,IAAMC,EAAWD,EAAIE,OAAOf,KAC5B,EAAKgB,UAAS,SAAAC,GAAS,sBAAQH,EAAWG,EAAUH,GAAY,O,EAGlEI,mBAAqB,WAEnB,OADuB,EAAKN,MAAMR,KAAO,EAAKQ,MAAMP,QAAU,EAAKO,MAAMN,K,EAI3Ea,gCAAkC,WAChC,IAAMZ,EAAQ,EAAKW,qBAInB,OAHaX,EAAQa,KAAKC,MAAO,EAAKT,MAAMR,KAAOG,EAAS,KAAO,G,4CAKrE,WACE,IAAMA,EAAQe,KAAKJ,qBACbV,EAAOc,KAAKH,kCAElB,OACE,qCACE,cAAC,EAAD,CAAS9B,MAAM,iBAAf,SACE,cAAC,EAAD,CAAiBG,QAAS,CAAC,OAAQ,UAAW,OAAQC,gBAAiB6B,KAAK7B,oBAE5Ec,EAGA,cAAC,EAAD,CAASlB,MAAM,aAAf,SACE,cAAC,EAAD,CAAWe,KAAMkB,KAAKV,MAAMR,KAAMC,QAASiB,KAAKV,MAAMP,QAASC,IAAKgB,KAAKV,MAAMN,IAAKC,MAAOA,EAAOC,KAAMA,MAH1G,cAAC,EAAD,CAAcE,QAAQ,4B,GAxCTa,aAAjBZ,EACGa,aAAe,CACpBpB,KAAM,EACNC,QAAS,EACTC,IAAK,GA+CMK,QC9CAc,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCFNC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,WAAa,oCAAoC,IAAM,gC","file":"static/js/main.bc7b516a.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default Section;\n","import React from \"react\";\nimport style from \"./FeedbackOptions.module.css\";\nimport PropTypes from \"prop-types\";\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      <div className=\"btnWrapper\">\n        {options.map(option => (\n          <button className={style.btn} key={option} type=\"button\" name={option} onClick={onLeaveFeedback}>\n            {option.toUpperCase()}\n          </button>\n        ))}\n      </div>\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Statistcs = ({ good, neutral, bad, total, rate }) => {\n  return (\n    <>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback rate: {rate}%</p>\n    </>\n  );\n};\n\nStatistcs.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  rate: PropTypes.number.isRequired\n};\n\nexport default Statistcs;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./Notification.module.css\";\n\nconst Notification = ({ messege }) => {\n  return (\n    <>\n      <p>{messege}</p>\n    </>\n  );\n};\n\nNotification.propTypes = {\n  messege: PropTypes.string.isRequired\n};\n\nexport default Notification;\n","import { Component } from \"react\";\nimport Section from \"../section/Section\";\nimport FeedbackOptions from \"../controls/FeedbackOptions\";\nimport Statistcs from \"../statistics/Statistics\";\nimport Notification from \"../notification/Notification\";\n\nclass Feedback extends Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  onLeaveFeedback = evt => {\n    const statName = evt.target.name;\n    this.setState(prevState => ({ [statName]: prevState[statName] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const totalFeedbacks = this.state.good + this.state.neutral + this.state.bad;\n    return totalFeedbacks;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const perc = total ? Math.round((this.state.good / total) * 100) : 0;\n    // console.log(this.totalFeedbacks);\n    // console.log(perc);\n    return perc;\n  };\n  render() {\n    const total = this.countTotalFeedback();\n    const rate = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title=\"Leave feedback\">\n          <FeedbackOptions options={[\"good\", \"neutral\", \"bad\"]} onLeaveFeedback={this.onLeaveFeedback} />\n        </Section>\n        {!total ? (\n          <Notification messege=\"No feedbacks yet\" />\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistcs good={this.state.good} neutral={this.state.neutral} bad={this.state.bad} total={total} rate={rate} />\n          </Section>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Feedback;\n","import React from \"react\";\nimport Feedback from \"./feedback/Feedback\";\n\nconst App = () => {\n  return (\n    <>\n      <Feedback />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnWrapper\":\"FeedbackOptions_btnWrapper__2NFx1\",\"btn\":\"FeedbackOptions_btn__3UrAO\"};"],"sourceRoot":""}